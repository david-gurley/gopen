/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_dss

import (
	"encoding/json"
)

// ClusterPnicInfo PnicInfo gives the information about the pnics associated with a host.
type ClusterPnicInfo struct {
	MacAddress *string `json:"mac-address,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewClusterPnicInfo instantiates a new ClusterPnicInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterPnicInfo() *ClusterPnicInfo {
	this := ClusterPnicInfo{}
	return &this
}

// NewClusterPnicInfoWithDefaults instantiates a new ClusterPnicInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterPnicInfoWithDefaults() *ClusterPnicInfo {
	this := ClusterPnicInfo{}
	return &this
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *ClusterPnicInfo) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPnicInfo) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *ClusterPnicInfo) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *ClusterPnicInfo) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterPnicInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPnicInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterPnicInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterPnicInfo) SetName(v string) {
	o.Name = &v
}

func (o ClusterPnicInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MacAddress != nil {
		toSerialize["mac-address"] = o.MacAddress
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableClusterPnicInfo struct {
	value *ClusterPnicInfo
	isSet bool
}

func (v NullableClusterPnicInfo) Get() *ClusterPnicInfo {
	return v.value
}

func (v *NullableClusterPnicInfo) Set(val *ClusterPnicInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterPnicInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterPnicInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterPnicInfo(val *ClusterPnicInfo) *NullableClusterPnicInfo {
	return &NullableClusterPnicInfo{value: val, isSet: true}
}

func (v NullableClusterPnicInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterPnicInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


