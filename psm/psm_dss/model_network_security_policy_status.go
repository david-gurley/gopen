/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_dss

import (
	"encoding/json"
)

// NetworkSecurityPolicyStatus status of referring policies.
type NetworkSecurityPolicyStatus struct {
	// Epoch ID which is monotonically incremented for each policy update.
	EpochId *int64 `json:"epoch-id,omitempty"`
	// List of policy refernces for this network.
	PolicyReferences *[]NetworkPolicyReference `json:"policy-references,omitempty"`
}

// NewNetworkSecurityPolicyStatus instantiates a new NetworkSecurityPolicyStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkSecurityPolicyStatus() *NetworkSecurityPolicyStatus {
	this := NetworkSecurityPolicyStatus{}
	return &this
}

// NewNetworkSecurityPolicyStatusWithDefaults instantiates a new NetworkSecurityPolicyStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkSecurityPolicyStatusWithDefaults() *NetworkSecurityPolicyStatus {
	this := NetworkSecurityPolicyStatus{}
	return &this
}

// GetEpochId returns the EpochId field value if set, zero value otherwise.
func (o *NetworkSecurityPolicyStatus) GetEpochId() int64 {
	if o == nil || o.EpochId == nil {
		var ret int64
		return ret
	}
	return *o.EpochId
}

// GetEpochIdOk returns a tuple with the EpochId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkSecurityPolicyStatus) GetEpochIdOk() (*int64, bool) {
	if o == nil || o.EpochId == nil {
		return nil, false
	}
	return o.EpochId, true
}

// HasEpochId returns a boolean if a field has been set.
func (o *NetworkSecurityPolicyStatus) HasEpochId() bool {
	if o != nil && o.EpochId != nil {
		return true
	}

	return false
}

// SetEpochId gets a reference to the given int64 and assigns it to the EpochId field.
func (o *NetworkSecurityPolicyStatus) SetEpochId(v int64) {
	o.EpochId = &v
}

// GetPolicyReferences returns the PolicyReferences field value if set, zero value otherwise.
func (o *NetworkSecurityPolicyStatus) GetPolicyReferences() []NetworkPolicyReference {
	if o == nil || o.PolicyReferences == nil {
		var ret []NetworkPolicyReference
		return ret
	}
	return *o.PolicyReferences
}

// GetPolicyReferencesOk returns a tuple with the PolicyReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkSecurityPolicyStatus) GetPolicyReferencesOk() (*[]NetworkPolicyReference, bool) {
	if o == nil || o.PolicyReferences == nil {
		return nil, false
	}
	return o.PolicyReferences, true
}

// HasPolicyReferences returns a boolean if a field has been set.
func (o *NetworkSecurityPolicyStatus) HasPolicyReferences() bool {
	if o != nil && o.PolicyReferences != nil {
		return true
	}

	return false
}

// SetPolicyReferences gets a reference to the given []NetworkPolicyReference and assigns it to the PolicyReferences field.
func (o *NetworkSecurityPolicyStatus) SetPolicyReferences(v []NetworkPolicyReference) {
	o.PolicyReferences = &v
}

func (o NetworkSecurityPolicyStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EpochId != nil {
		toSerialize["epoch-id"] = o.EpochId
	}
	if o.PolicyReferences != nil {
		toSerialize["policy-references"] = o.PolicyReferences
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkSecurityPolicyStatus struct {
	value *NetworkSecurityPolicyStatus
	isSet bool
}

func (v NullableNetworkSecurityPolicyStatus) Get() *NetworkSecurityPolicyStatus {
	return v.value
}

func (v *NullableNetworkSecurityPolicyStatus) Set(val *NetworkSecurityPolicyStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkSecurityPolicyStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkSecurityPolicyStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkSecurityPolicyStatus(val *NetworkSecurityPolicyStatus) *NullableNetworkSecurityPolicyStatus {
	return &NullableNetworkSecurityPolicyStatus{value: val, isSet: true}
}

func (v NullableNetworkSecurityPolicyStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkSecurityPolicyStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


