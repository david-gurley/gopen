/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_dss

import (
	"encoding/json"
)

// NetworkPolicyReference struct for NetworkPolicyReference
type NetworkPolicyReference struct {
	// Name of the policy. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.
	Name *string `json:"name,omitempty"`
	// UUID of the policy.
	Uuid *string `json:"uuid,omitempty"`
}

// NewNetworkPolicyReference instantiates a new NetworkPolicyReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkPolicyReference() *NetworkPolicyReference {
	this := NetworkPolicyReference{}
	return &this
}

// NewNetworkPolicyReferenceWithDefaults instantiates a new NetworkPolicyReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkPolicyReferenceWithDefaults() *NetworkPolicyReference {
	this := NetworkPolicyReference{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkPolicyReference) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPolicyReference) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkPolicyReference) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkPolicyReference) SetName(v string) {
	o.Name = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *NetworkPolicyReference) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPolicyReference) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *NetworkPolicyReference) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *NetworkPolicyReference) SetUuid(v string) {
	o.Uuid = &v
}

func (o NetworkPolicyReference) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkPolicyReference struct {
	value *NetworkPolicyReference
	isSet bool
}

func (v NullableNetworkPolicyReference) Get() *NetworkPolicyReference {
	return v.value
}

func (v *NullableNetworkPolicyReference) Set(val *NetworkPolicyReference) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkPolicyReference) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkPolicyReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkPolicyReference(val *NetworkPolicyReference) *NullableNetworkPolicyReference {
	return &NullableNetworkPolicyReference{value: val, isSet: true}
}

func (v NullableNetworkPolicyReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkPolicyReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


